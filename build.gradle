plugins {
    id "java"
    id "de.undercouch.download" version "4.0.0"
}

// This project MUST be compiled with Java 1.7
sourceCompatibility = 1.7
targetCompatibility = 1.7

group 'com.arzio'
version = '1.7.15'

repositories {
    mavenCentral()
}

ext {
    downloadedJarsFolder = new File(buildDir, 'downloaded-jars')
    downloadedZipsFolder = new File(buildDir, 'downloaded-zips')
}

task deleteDownloads(type: Delete) {
    delete downloadedJarsFolder, downloadedZipsFolder
}

task downloadZipFiles(type: Download) {
    doFirst {
        mkdir downloadedZipsFolder
    }
    src([
        'https://media.forgecdn.net/files/720/514/WorldGuard_Custom_Flags.zip',
        'https://media.forgecdn.net/files/758/474/Essentials.zip'
    ])
    dest downloadedZipsFolder
    overwrite false
    
    // Unzips the files
    doLast {
        fileTree(dir: downloadedZipsFolder).include('*.zip').each { zipFile ->
            copy {
                from zipTree(zipFile)
                into downloadedZipsFolder      
            }
        }
    }
}

task downloadJarFiles(dependsOn: downloadZipFiles, type: Download) {
    doFirst {
        mkdir downloadedJarsFolder
    }
    src([
        'http://central.maven.org/maven2/org/ow2/asm/asm-all/4.1/asm-all-4.1.jar',
        'https://minecraft.maeyanie.com/cauldron/cauldron-1.6.4-1.965.21.204-server.jar',
        'https://cdn.getbukkit.org/craftbukkit/craftbukkit-1.6.4-R2.0.jar',
        'https://media.forgecdn.net/files/614/479/SimpleClans-2.4.1.jar',
        'https://media.forgecdn.net/files/719/257/worldguard-5.8.jar',
        'https://media.forgecdn.net/files/755/43/AuthMe.jar',
        'https://media.forgecdn.net/files/707/659/PlotMe.jar',
        'https://media.forgecdn.net/files/785/673/ProtocolLib-3.3.1.jar',
        'https://media.forgecdn.net/files/739/931/worldedit-5.5.8.jar'

    ])
    dest downloadedJarsFolder
    overwrite false
}

dependencies {
    implementation fileTree(dir: downloadedJarsFolder, include: ['*.jar'])
    implementation fileTree(dir: downloadedZipsFolder, include: ['*.jar'])
}

compileJava.options.encoding = 'UTF-8'
compileJava.dependsOn(downloadJarFiles)

processResources {
    // Replaces the PROJECT_VERSION tag inside of yml resources by the project version
    filter { 
        String line -> line.replace('{PROJECT_VERSION}', version) 
    }
}

