apply plugin: 'java'

// This project MUST be compiled with Java 1.7
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenCentral()
}

def downloadedFile = { name, url ->
	File file = new File("$buildDir/download/${name}");

    if (!file.exists()) {
    	file.parentFile.mkdirs()
    	println "Downloading ${name}"
        ant.get(src: url, dest: file)
    }
    
    Object result = file.absolutePath;
    
    if ("${name}".contains(".zip")){
    	println "Unzipping ${name}"
    	File destiny = new File("$buildDir/download/${name}-EXTRACTED/");
    	destiny.delete(); // Deletes the extraction cache folder
    	
    	ant.unzip(src: file, dest: destiny)
    	result = fileTree(dir: destiny, include: "**/*.jar")
    }
    
    files(result)
}

dependencies {
	compile downloadedFile('WorldGuard-5.8.jar', 'https://dev.bukkit.org/projects/worldguard/files/719257/download')
	compile downloadedFile('AuthMe-3.1.jar', 'https://dev.bukkit.org/projects/authme-reloaded/files/755043/download')
	compile downloadedFile('PlotMe-0.13b.jar', 'https://dev.bukkit.org/projects/plotme/files/707659/download')
	compile downloadedFile('WGCustomFlags-1.6.zip', 'https://dev.bukkit.org/projects/worldguard-custom-flags/files/720514/download')
	compile downloadedFile('ProtocolLib-3.3.1.jar', 'https://dev.bukkit.org/projects/protocollib/files/785673/download')
	compile downloadedFile('WorldEdit-5.5.8.jar', 'https://dev.bukkit.org/projects/worldedit/files/739931/download')
	compile downloadedFile('craftbukkit-1.6.4.jar', 'https://cdn.getbukkit.org/craftbukkit/craftbukkit-1.6.4-R2.0.jar')
	compile downloadedFile('cauldron-1.6.4-1.965.21.204-server.jar', 'https://minecraft.maeyanie.com/cauldron/cauldron-1.6.4-1.965.21.204-server.jar')
	compile downloadedFile('asm-all-4.1.jar', 'http://central.maven.org/maven2/org/ow2/asm/asm-all/4.1/asm-all-4.1.jar')
	compile downloadedFile('CraftingDead.zip', modpack_url)
}

processResources {
    // Replaces the PROJECT_VERSION tag inside of yml resources by the project version
    from('src/main/resources') {
        include '*.yml'
        filter { line ->
        	line.replace('{PROJECT_VERSION}', version)
        }
    }
}

